[{"/Users/syu/covid_board/src/index.tsx":"1","/Users/syu/covid_board/src/serviceWorker.ts":"2","/Users/syu/covid_board/src/app/store.ts":"3","/Users/syu/covid_board/src/App.tsx":"4","/Users/syu/covid_board/src/features/covid/covidSlice.ts":"5","/Users/syu/covid_board/src/features/covid/Cards/Cards.tsx":"6","/Users/syu/covid_board/src/features/covid/Chart/Chart.tsx":"7","/Users/syu/covid_board/src/features/covid/PieChart/PieChart.tsx":"8","/Users/syu/covid_board/src/features/covid/SwitchCountry/SwitchCountry.tsx":"9","/Users/syu/covid_board/src/features/covid/DashBoard/DashBoard.tsx":"10"},{"size":648,"mtime":1612163771040,"results":"11","hashOfConfig":"12"},{"size":5424,"mtime":1612163771042,"results":"13","hashOfConfig":"12"},{"size":404,"mtime":1612338894720,"results":"14","hashOfConfig":"12"},{"size":183,"mtime":1612338857063,"results":"15","hashOfConfig":"12"},{"size":4337,"mtime":1612340347681,"results":"16","hashOfConfig":"12"},{"size":2217,"mtime":1612169515397,"results":"17","hashOfConfig":"12"},{"size":1697,"mtime":1612252473283,"results":"18","hashOfConfig":"12"},{"size":1400,"mtime":1612257422576,"results":"19","hashOfConfig":"12"},{"size":1250,"mtime":1612260279302,"results":"20","hashOfConfig":"12"},{"size":1797,"mtime":1612337401296,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"qu53yx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/syu/covid_board/src/index.tsx",[],["44","45"],"/Users/syu/covid_board/src/serviceWorker.ts",[],"/Users/syu/covid_board/src/app/store.ts",[],"/Users/syu/covid_board/src/App.tsx",[],"/Users/syu/covid_board/src/features/covid/covidSlice.ts",[],"/Users/syu/covid_board/src/features/covid/Cards/Cards.tsx",[],"/Users/syu/covid_board/src/features/covid/Chart/Chart.tsx",[],"/Users/syu/covid_board/src/features/covid/PieChart/PieChart.tsx",[],"/Users/syu/covid_board/src/features/covid/SwitchCountry/SwitchCountry.tsx",["46","47"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport { useDispatch } from \"react-redux\";\nimport { fetchAsyncGet, fetchAsyncGetCountry } from \"../covidSlice\";\nimport { count } from \"console\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginBottom: theme.spacing(3),\n    minWidth: 320,\n  },\n}));\n\nconst SwitchCountry: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const countries = [\n    \"japan\",\n    \"china\",\n    \"us\",\n    \"france\",\n    \"italy\",\n    \"spain\",\n    \"united kingdom\",\n    \"germany\",\n    \"russia\",\n    \"brazil\",\n    \"taiwan\",\n    \"thailand\",\n    \"new zealand\",\n    \"sweden\",\n    \"india\",\n  ];\n\n  return (\n    <FormControl className={classes.formControl}>\n      <NativeSelect\n        onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n          dispatch(fetchAsyncGetCountry(e.target.value))\n        }\n      >\n        <option value=\"\">Worldwide</option>\n        {countries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default SwitchCountry;\n","/Users/syu/covid_board/src/features/covid/DashBoard/DashBoard.tsx",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":10,"nodeType":"55","messageId":"56","endLine":6,"endColumn":23},{"ruleId":"53","severity":1,"message":"57","line":7,"column":10,"nodeType":"55","messageId":"56","endLine":7,"endColumn":15},{"ruleId":"53","severity":1,"message":"58","line":10,"column":3,"nodeType":"55","messageId":"56","endLine":10,"endColumn":9},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'fetchAsyncGet' is defined but never used.","Identifier","unusedVar","'count' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation"]